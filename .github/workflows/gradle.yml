name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Generate gradle wrapper
      run: gradle wrapper

    - name: Set YML
      run: |
        mkdir -p src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
        find src
        
    - name: Build with Gradle Wrapper
      run: ./gradlew clean build --exclude-task test
      
    - name: Transfer jar file
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.PROD_HOST}}
        username: ${{secrets.PROD_USERNAME}}
        key: ${{secrets.PROD_PRIVATE_KEY}}
        port: ${{secrets.PROD_PORT}}
        source: "build/libs/modoojeonse-0.0.1-SNAPSHOT.jar"
        target: "/volume2/docker/modoojeonse/modoojeonse-service"
        overwrite: true
        debug: true


  deploy:

    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    
    steps:
    - name: Deploy to Instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.PROD_HOST}}
        username: ${{secrets.PROD_USERNAME}}
        key: ${{secrets.PROD_PRIVATE_KEY}}
        port: ${{secrets.PROD_PORT}}
        script: |
          whoami
          docker-compose build
          docker rm -f $(docker ps -qa) 2>/dev/null || true
          docker-compose up -d
          docker image prune -f
